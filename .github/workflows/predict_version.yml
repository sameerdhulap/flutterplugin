name: PR Checker
on:
  pull_request:
    branches:
      - 'main'
    types: [labeled, opened,  synchronize]
  workflow_dispatch:
    
permissions:
  contents: write
  pull-requests: write 

jobs:
  Versioning:
    runs-on: ubuntu-latest
    steps:
    
    - uses: shioyang/check-pr-labels-on-push-action@v1.0.9
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        labels: '["Major :star2:", "Minor :sparkles:","Patch :bug:"]'
  
    - uses: actions/checkout@v3
      with:
        ref: "${{ github.base_ref }}"
        path: 'main'
        
    - name: Install Flutter
      uses: subosito/flutter-action@v1
      with:
          flutter-version: '3.3.10'
          
    - name: 'master version predict'
      run: |
        cd main
        flutter pub get
        
    - name: 'Change patch version'
      if: contains(github.event.issue.labels.*.name, 'Patch :bug:')
      run: |
        cd main
        flutter pub run pub_version_plus:main patch
        _pluginVersion=$(sed -n '3p' pubspec.yaml)
        set -e
        echo "PLUGIN_VERSION=${_pluginVersion}" >> $GITHUB_ENV
        echo "new version : ${_pluginVersion}"
        cd ..
        rm -rf main
      
    - name: Get Source branch
      uses: actions/checkout@v3
      with:
        ref: "${{ github.head_ref || github.ref_name }}"
        
        
    - name: 'Update version'
      run: |
        sed -i "3 s/.*/${{ env.PLUGIN_VERSION }}/" pubspec.yaml
        cat pubspec.yaml
            
    - name: Commit and push changes
      uses: devops-infra/action-commit-push@master
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: "Updated ${{ env.PLUGIN_VERSION }}"
          commit_prefix: "[AUTO]"
          
    - name: 'status'
      run: |
        echo "${{ env.PLUGIN_VERSION }}"
        env
        echo "${{ github.head_ref || github.ref_name }}"
          
        
   
      
